## NS8 CheatSheet ##

# install NS8
curl https://raw.githubusercontent.com/NethServer/ns8-core/main/core/install.sh | bash

# Check Redis status
systemctl status redis

# List of podman containers
podman volume list

# inspect volume
podman volume inspect redis-data


# inforamzioni su podman (dove salva etc)
podman info 

# Podman various commands
podman inspect -l

# lista immagini
podman images


podman ps
podman ps -a
podman stop <container-name>
podman rm <container-name>

# build manuale in locale
bash build-images.sh

# Log del modulo
journalctl -t nethvoice8-agent

# log di errore di systemd
journalctl --user -xe

# DEBUG
ssh nethvoice8@localhost

# github package repo login
REGISTRY_AUTH_FILE=/etc/nethserver/registry.json podman login -u Stell0 -p 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 ghcr.io

# launch asterisk
podman run -d --network=host --name=asterisk --replace ghcr.io/stell0/asterisk:latest asterisk -f -C /etc/asterisk/asterisk.conf

# Launch container build with my repo
export REPOBASE=ghcr.io/stell0
export REGISTRY_AUTH_FILE=/etc/nethserver/registry.json
podman login -u Stell0 -p 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 ghcr.io
bash -x build-images.sh
buildah push $REPOBASE/nethvoice docker://$REPOBASE/nethvoice:latest
buildah push $REPOBASE/asterisk docker://$REPOBASE/asterisk:latest



# remove build nethvoice module, build i t again, push it, get it, install it 
remove-module --no-preserve $(ls /home/ | grep nethvoice | head -n1); rm -fr /home/nethvoice*; export REPOBASE=ghcr.io/stell0 ; export REGISTRY_AUTH_FILE=/etc/nethserver/registry.json;  podman login -u Stell0 -p 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 ghcr.io ; bash build-images.sh ; buildah push $REPOBASE/nethvoice docker://$REPOBASE/nethvoice:latest ; buildah push $REPOBASE/asterisk docker://$REPOBASE/asterisk:latest; sleep 1m; add-module $REPOBASE/nethvoice:latest 1

# Tips:
- commentare la build della ui per andare piu' veloce


# DEBUG
ssh nethvoice3@localhost
runagent ~/.config/actions/create-module/05setenvs


runagent ~/.config/actions/create-module/05setenvs <<<"{
  "id": "b21a816b-d0e6-4153-bd7a-20ce6e74e222",
  "action": "create-module",
  "data": {
    "images": [
      "docker.io/library/mariadb:latest"
    ]
  },
  "parent": "a5189d1b-c25c-4438-af32-67411020d34d",
  "extra": {}
}
"


# paylod passato in standar dinput alla action
/usr/local/sbin/redis-cli --raw get module/nethvoice6/task/b21a816b-d0e6-4153-bd7a-20ce6e74e222/context  | jq | cat

# 
api-cli run ...

# rimuovere modulo
remove-module --no-preserve nethvoice3



systemctl --user status mariadb


- mysql
  - 127.0.0.1 host network
  
  
- asterisk
  - utilizzare host network
  - unix domain socket ?
  - volume per /etc/asterisk
  (sips dietro certificato?)
  
- nethvoice
  - container apache + php 5.6
  
  - traefik
  - freepbx
  
- cti
  - traefik
  - proxy tls
  
~~~~~~~~~~~~~~~~~~~~~~~~  

- phonebook
  - proxy tls


utente asterisk ? 
   

- fare container mysql
- container asterisk con volumi per config e agi e che parla con



- ns8, kickstart, 
- aggiunta immainge mysql
- usare le variabili d'ambiente
- generare le password
- girare le porte
- un file service per ogni container imageroot/systemd/user/nethvoice.service
- copiare imageroot/actions/create-module da un altro modulo

problemi
- il repo deve essere pubblico
- il nome del repo deve essere lowercase
- build locali create come nethserver



# TODO

- 
- add mariadb configuration script
    - configure odbc
    - configure user for cdr 
    - configure asterisk cdr user
    - configure user for freepbx OK
    
- Asterisk
    - open ports
    - build Asterisk instead of using ns7 packages
    - upgrade to Asterisk 18
    
- FreePBX
    - add freepbx statis data
    - configure db
    - upgrade to last freepbx
    - install freepbx from sources during container build
    - install pdo_odbc
        
- AGI
    - check fastagi
    - try to run agi on freepbx container

- selinux
    - make stuff work on a selinux environment

- networking
   - avoid network=host in asterisk container
   
- Nethcti
    - make a container with old nethcti
    - add ui

- wizard 
    - restapi
    - ui 



freepbx fa volumes from asterisk
entry point di conf in freepbx e non in asterisk, deve capire se e' la prima inst o no e inizializzare 
freepbx prepara /etc/asterisk come volume e parte prima di asterisk
asterisk: mettere volumes from freepbx (require, after)


alternative:
se e' possibile evitare del tutto la configurazione di odbc nell'entry point del container asterisk e farlo partire con un set di file di configurazione di base

# dump mysql
cd /home/tux/nethvoice
for DB in asterisk asteriskcdrdb; do
    mydumper -h 127.0.0.1 -u root -p $MARIADB_ROOT_PASSWORD -P $MARIADB_PORT -B ${DB} --complete-insert --outputdir imageroot/freepbx/root/initdb.d/data/${DB}
done
























###############################
###  Copy data from FreePBX ###
###############################
cd /home/tux/nethvoice
chown -R tux:tux /home/tux/nethvoice/imageroot/volumes/
scp -r root@172.25.5.47:/var/www/html/freepbx/* imageroot/volumes/freepbx/
scp -r root@172.25.5.47:/var/lib/asterisk/agi-bin/* imageroot/volumes/var_lib_asterisk_agi-bin/
scp -r root@172.25.5.47:/var/lib/asterisk/sounds/* imageroot/volumes/var_lib_asterisk_sounds/

patch -p0 < freepbx_fixes.patch
rm -fr imageroot/volumes/freepbx/admin/assets/less/cache/*
rm -fr imageroot/volumes/freepbx/admin/modules/*/assets/less/cache/*
rm -fr imageroot/volumes/freepbx/admin/modules/*/assets/less/*/cache/*
#rm -fr imageroot/volumes/freepbx/admin/assets/endpointman
#rm -fr imageroot/volumes/freepbx/admin/modules/_ep_phone_modules
#rm -fr imageroot/volumes/freepbx/admin/modules/endpointman
mydumper -h 172.25.5.47 -u makako -p Makako,1234 -B asterisk --complete-insert --outputdir imageroot/freepbx/root/initdb.d/data/asterisk
mydumper -h 172.25.5.47 -u makako -p Makako,1234 -B asteriskcdrdb --complete-insert --outputdir imageroot/freepbx/root/initdb.d/data/asteriskcdrdb
mydumper -h 172.25.5.47 -u makako -p Makako,1234 -B nethcti3 --complete-insert --outputdir imageroot/freepbx/root/initdb.d/data/nethcti3
rm -fr imageroot/freepbx/root/initdb.d/data/asterisk/asterisk.endpointman*






############################################
############################################
###  Manual containers build and launch  ###
############################################
############################################

# Reset podman
buildah rm --all
podman system prune -f
podman system reset -f
rm -fr ~/.local/share/containers

#
# Set ENV
#
export MARIADB_PORT=13306
export APACHE_SSL_PORT=7189
export APACHE_RUN_USER=asterisk
export APACHE_RUN_GROUP=asterisk
export MARIADB_ROOT_PASSWORD=dummymariadbpass
export AMPDBUSER=freepbxuser
export AMPDBHOST=127.0.0.1
export AMPDBNAME=asterisk
export ASTMANAGERHOST=127.0.0.1
export ASTMANAGERPORT=5038
export AMPMGRUSER=admin
export AMPMGRPASS=dummyampmgrpass
export AMPDBPASS=dummyampdbpass
export CDRDBHOST=mariadb
export CDRDBNAME=asteriskcdrdb
export CDRDBUSER=cdruser
export CDRDBPASS=dummycdrdbpass
export PHP_INI_DIR=/usr/local/etc/php
export REPOBASE=ghcr.io/stell0
export REGISTRY_AUTH_FILE=/etc/nethserver/registry.json
export APACHE_PORT=7187
export AMPASTERISKGROUP=asterisk
export AMPASTERISKUSER=asterisk
export AMPASTERISKWEBGROUP=asterisk
export AMPASTERISKWEBUSER=asterisk
export NETHVOICESECRETKEY=dummysecretkey
export CTIDBPASS=dummyctidbpass
export TANCREDIPORT=7190
export TANCREDI_STATIC_TOKEN=dummytancredistatictoken
export BRAND_NAME=NexthVoice
export BRAND_SITE=http://www.nethvoice.it
export BRAND_DOCS=http://nethvoice.docs.nethesis.it

podman login -u Stell0 -p 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 ghcr.io
repobase="${REPOBASE:-ghcr.io/nethserver}"
reponame="nethvoice"

#
# Asterisk
#
container=$(buildah from centos:7)
buildah add "${container}" imageroot/asterisk/root/ /
buildah run "${container}" yum -y install asterisk18-core asterisk18-addons-core asterisk18-dahdi asterisk18-odbc asterisk18-voicemail asterisk18-voicemail-odbcstorage unixODBC
buildah run "${container}" rm -fr /var/cache/yum
buildah config --entrypoint='["/entrypoint.sh"]' "${container}"
buildah commit "${container}" asterisk

#
# FreePBX 14
#
container=$(buildah from docker.io/library/php:5.6-apache)
buildah add "${container}" imageroot/freepbx/root/ /
buildah run "${container}" groupadd -r asterisk 
buildah run "${container}" useradd -r -s /bin/false -d /var/lib/asterisk -M -c 'Asterisk User' -g asterisk asterisk

buildah run "${container}" /bin/sh <<EOF
sed -i 's/<VirtualHost \*:80>/<VirtualHost \*:\$\{APACHE_PORT\}>/' /etc/apache2/sites-enabled/000-default.conf
sed -i 's/Listen 80/Listen \$\{APACHE_PORT\}/' /etc/apache2/ports.conf
sed -i 's/Listen 443/Listen \$\{APACHE_SSL_PORT\}/' /etc/apache2/ports.conf
echo '\n: \${APACHE_PORT:=80}\nexport APACHE_PORT\n: \${APACHE_SSL_PORT:=443}\nexport APACHE_SSL_PORT\n' >> /etc/apache2/envvars
EOF

buildah config \
    --entrypoint='["/entrypoint.sh"]' \
    "${container}"

# install PHP additional modules
buildah run "${container}" docker-php-source extract

# install pdo_mysql
buildah run "${container}" docker-php-ext-configure pdo_mysql
buildah run "${container}" docker-php-ext-install pdo_mysql

# install php gettext
buildah run "${container}" docker-php-ext-configure gettext
buildah run "${container}" docker-php-ext-install gettext

# install php semaphores (sysvsem)
buildah run "${container}" docker-php-ext-configure sysvsem
buildah run "${container}" docker-php-ext-install sysvsem

# TODO install pdo_odbc
#buildah run "${container}" apt-get update
#buildah run "${container}" apt install -y unixodbc unixodbc-dev
#buildah run "${container}" docker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC
#buildah run "${container}" docker-php-ext-install pdo_odbc

# Install required packages
buildah run "${container}" apt-get update
buildah run "${container}" apt install -y gnupg
buildah run "${container}" apt install -y cron # TODO needed by freepbx cron module. To remove.

# Use PHP development ini configuration and enable logging on syslog
buildah run "${container}" cp -a "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
buildah run "${container}" sed -i 's/^;error_log = syslog/error_log = \/dev\/stderr/' $PHP_INI_DIR/php.ini
echo "error_log = /dev/stderr" | buildah run "${container}" tee -a "$PHP_INI_DIR/conf.d/freepbx.ini"
echo "variables_order = "EGPCS"" | buildah run "${container}" tee -a "$PHP_INI_DIR/conf.d/freepbx.ini"

# Enable environment variables
buildah run "${container}" sed -i 's/^variables_order = "GPCS"/variables_order = "EGPCS"/' $PHP_INI_DIR/php.ini

# enable apache rewrite module
buildah run "${container}" a2enmod rewrite proxy*

# remove php sources
buildah run "${container}" docker-php-source delete

# TODO REMOVE BEFORE DEPLOY
buildah run "${container}" apt-get install -y mycli vim telnet

# clean apt cache
buildah run "${container}" apt-get clean autoclean
buildah run "${container}" apt-get autoremove --yes
buildah run "${container}" rm -rf /var/lib/dpkg/info/* /var/lib/cache/* /var/lib/log/*
buildah run "${container}" touch /var/lib/dpkg/status

# commit container
buildah commit "${container}" freepbx14


#
# Tancredi
#
container=$(buildah from docker.io/library/php:7-apache)

buildah config --entrypoint='["/entrypoint.sh"]' "${container}"

buildah add "${container}"  imageroot/tancredi/root/ /

buildah run "${container}" /bin/sh <<'EOF'
apt update
apt install -y libapache2-mod-xsendfile zip
ln -sf /etc/apache2/sites-available/tancredi.conf /etc/apache2/sites-enabled/tancredi.conf

sed -i 's/<VirtualHost \*:80>/<VirtualHost \*:$\{TANCREDIPORT\}>/' /etc/apache2/sites-enabled/000-default.conf
sed -i 's/Listen 80/Listen $\{TANCREDIPORT\}/' /etc/apache2/ports.conf
sed -i 's/Listen 443/Listen $\{TANCREDI_SSL_PORT\}/' /etc/apache2/ports.conf
echo -e '\n: ${TANCREDIPORT:=80}\nexport TANCREDIPORT\n: ${TANCREDI_SSL_PORT:=443}\nexport TANCREDI_SSL_PORT\n' | buildah run "${container}" tee -a /etc/apache2/envvars

# Install Tancredi files
mkdir /usr/share/tancredi/
curl -L https://github.com/nethesis/tancredi/archive/refs/heads/master.tar.gz -o - | tar xzp --strip-component=1 -C /usr/share/tancredi/ tancredi-master/data/ tancredi-master/public/ tancredi-master/scripts/ tancredi-master/src/ tancredi-master/composer.json tancredi-master/composer.lock

BRANCH=otherdb
curl -L https://github.com/nethesis/nethserver-tancredi/archive/refs/heads/${BRANCH}.tar.gz -o - | tar xzp --strip-component=2 -C / nethserver-tancredi-${BRANCH}/root/usr/share/tancredi/ nethserver-tancredi-${BRANCH}/root/var/lib/tancredi
cd /usr/share/tancredi/
curl -s https://getcomposer.org/installer | php
COMPOSER_ALLOW_SUPERUSER=1 php composer.phar install --no-dev
rm -fr /usr/share/tancredi/src/Entity/SampleFilter.php /usr/share/tancredi/composer.phar /usr/share/tancredi/composer.json /usr/share/tancredi/composer.lock

# install pdo_mysql
docker-php-source extract
docker-php-ext-configure pdo_mysql
docker-php-ext-install pdo_mysql
docker-php-source delete

# clean apt cache
apt-get clean autoclean
apt-get autoremove --yes
rm -rf /var/lib/dpkg/info/* /var/lib/cache/* /var/lib/log/*
touch /var/lib/dpkg/status
EOF

buildah run "${container}" cp -a "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
buildah run "${container}" sed -i 's/^;error_log = syslog/error_log = \/dev\/stderr/' $PHP_INI_DIR/php.ini

buildah commit "${container}" tancredi








sleep 5
#
# MariaDB
#
rm -f /var/tmp/mariadb.ctr-id /var/tmp/mariadb.pid
MARIA_TAG=10.8.2
/usr/bin/podman run \
    --detach \
    --conmon-pidfile=/var/tmp/mariadb.pid \
    --cidfile=/var/tmp/mariadb.ctr-id \
    --cgroups=no-conmon \
    --log-opt=tag=mariadb \
    --replace --name=mariadb \
    --volume=mariadb-data:/var/lib/mysql:Z \
    --env=MARIADB_ROOT_PASSWORD \
    --network=host \
    docker.io/library/mariadb:${MARIA_TAG} \
    --port ${MARIADB_PORT}


sleep 5
# Run Asterisk
rm -f /var/tmp/asterisk.ctr-id /var/tmp/asterisk.pid
/usr/bin/podman run \
    --detach \
    --conmon-pidfile=/var/tmp/asterisk.pid \
    --cidfile=/var/tmp/asterisk.ctr-id \
    --cgroups=no-conmon \
    --log-opt=tag=asterisk \
    --replace --name=asterisk \
    --volume=asterisk:/etc/asterisk:z \
    --volume=spool:/var/spool/asterisk:z \
    --mount=type=bind,source=imageroot/volumes/freepbx,destination=/var/www/html/freepbx,relabel=shared,ro=true \
    --mount=type=bind,source=imageroot/volumes/var_lib_asterisk_sounds,destination=/var/lib/asterisk/sounds,relabel=shared,ro=true \
    --mount=type=bind,source=imageroot/volumes/var_lib_asterisk_agi-bin,destination=/var/lib/asterisk/agi-bin,relabel=shared,ro=true \
    --env=APACHE_SSL_PORT \
    --env=ASTMANAGERHOST \
    --env=ASTMANAGERPORT \
    --env=AMPMGRUSER \
    --env=AMPMGRPASS \
    --network=host \
    asterisk
    

#    --userns=keep-id \
sleep 5

# Run FreePBX 14 
rm -f /var/tmp/freepbx14.ctr-id /var/tmp/freepbx14.pid
/usr/bin/podman run \
    --detach \
    --conmon-pidfile=/var/tmp/freepbx14.pid \
    --cidfile=/var/tmp/freepbx14.ctr-id \
    --cgroups=no-conmon \
    --log-opt=tag=freepbx14 \
    --replace --name=freepbx14 \
    --volume=spool:/var/spool/asterisk:z \
    --volume=asterisk:/etc/asterisk:z \
    --volume=nethcti:/etc/nethcti:z \
    --mount=type=bind,source=imageroot/volumes/freepbx,destination=/var/www/html/freepbx,relabel=shared,ro=false \
    --mount=type=bind,source=imageroot/volumes/var_lib_asterisk_sounds,destination=/var/lib/asterisk/sounds,relabel=shared,ro=false \
    --mount=type=bind,source=imageroot/volumes/var_lib_asterisk_agi-bin,destination=/var/lib/asterisk/agi-bin,relabel=shared,ro=false \
    --env=MARIADB_ROOT_PASSWORD \
    --env=MARIADB_PORT \
    --env=APACHE_RUN_USER \
    --env=APACHE_RUN_GROUP \
    --env=ASTMANAGERHOST \
    --env=ASTMANAGERPORT \
    --env=AMPMGRUSER \
    --env=AMPMGRPASS \
    --env=AMPDBUSER \
    --env=AMPDBPASS \
    --env=AMPDBHOST \
    --env=AMPDBNAME \
    --env=CDRDBUSER \
    --env=CDRDBPASS \
    --env=APACHE_PORT \
    --env=APACHE_SSL_PORT \
    --env=NETHVOICESECRETKEY \
    --env=CTIDBPASS \
    --env=TANCREDIPORT \
    --env=BRAND_NAME \
    --env=BRAND_SITE \
    --env=BRAND_DOCS \
    --network=host \
    freepbx14

sleep 5
# Run Tancredi
rm -f /var/tmp/tancredi.ctr-id /var/tmp/tancredi.pid
/usr/bin/podman run \
    --detach \
    --conmon-pidfile=/var/tmp/tancredi.pid \
    --cidfile=/var/tmp/tancredi.ctr-id \
    --cgroups=no-conmon \
    --log-opt=tag=tancredi \
    --replace --name=tancredi \
    --volume=tancredi:/var/lib/tancredi:Z \
    --env=TANCREDIPORT \
    --env=NETHVOICESECRETKEY \
    --env=AMPDBUSER \
    --env=AMPDBPASS \
    --env=MARIADB_PORT \
    --env=TANCREDI_STATIC_TOKEN \
    --network=host \
    tancredi


#
# Debug
#

podman exec -it freepbx14 bash
podman exec -it asterisk bash

apt-get update
apt-get install -y mycli vim telnet

export LC_ALL=C.UTF-8
export LANG=C.UTF-8
mycli -u root -h localhost -P $MARIADB_PORT -p $MARIADB_ROOT_PASSWORD

# tancredi debug
export LC_ALL=C.UTF-8
export LANG=C.UTF-8
fpbxPasswordHash=$(echo "SELECT password_sha1 FROM ampusers WHERE username = 'admin'" | mycli -u ${AMPDBUSER} -h 127.0.0.1 -P ${MARIADB_PORT} -p ${AMPDBPASS} -D asterisk | tail -n1 )
SecretKey=$(echo -n "admin${fpbxPasswordHash}${NETHVOICESECRETKEY}" | sha1sum | awk '{print $1}')

# GET tancredi available models
curl -kv "http://127.0.0.1:${TANCREDIPORT}/tancredi/api/v1/models" -H "User: admin" -H "SecretKey: ${SecretKey}"


# telnet 
telnet 127.0.0.1 5038

Action: Login
ActionID: 1
Username: admin
Secret: dummyampmgrpass


# TODO module fixing
fwconsole ma install returnontransfer recordings voicemail queues queuereport paging nethcti3 customcontexts apicall

# TODO fix cache dir 
chmod o+w imageroot/volumes/freepbx/admin/assets/less/cache

# TODO use asterisk AMI for Tancredi runtime filters instead of sqlite
# TODO configure odbc for cdr
