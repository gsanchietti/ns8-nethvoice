## NS8 CheatSheet ##

# install NS8
curl https://raw.githubusercontent.com/NethServer/ns8-core/main/core/install.sh | bash

# Check Redis status
systemctl status redis

# List of podman containers
podman volume list

# inspect volume
podman volume inspect redis-data


# inforamzioni su podman (dove salva etc)
podman info 

# Podman various commands
podman inspect -l

# lista immagini
podman images


podman ps
podman ps -a
podman stop <container-name>
podman rm <container-name>

# build manuale in locale
bash build-images.sh

# Log del modulo
journalctl -t nethvoice8-agent

# log di errore di systemd
journalctl --user -xe

# DEBUG
ssh nethvoice8@localhost

# github package repo login
REGISTRY_AUTH_FILE=/etc/nethserver/registry.json podman login -u Stell0 -p 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 ghcr.io

# launch asterisk
podman run -d --network=host --name=asterisk --replace ghcr.io/stell0/asterisk:latest asterisk -f -C /etc/asterisk/asterisk.conf

# Launch container build with my repo
export REPOBASE=ghcr.io/stell0
export REGISTRY_AUTH_FILE=/etc/nethserver/registry.json
podman login -u Stell0 -p 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 ghcr.io
bash -x build-images.sh
buildah push $REPOBASE/nethvoice docker://$REPOBASE/nethvoice:latest
buildah push $REPOBASE/asterisk docker://$REPOBASE/asterisk:latest



# remove build nethvoice module, build i t again, push it, get it, install it 
remove-module --no-preserve $(ls /home/ | grep nethvoice | head -n1); rm -fr /home/nethvoice*
export REPOBASE=ghcr.io/stell0
export REGISTRY_AUTH_FILE=/etc/nethserver/registry.json
podman login -u Stell0 -p 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 ghcr.io
bash build-images.sh
for reponame in nethvoice mariadb asterisk freepbx14 tancredi nethcti janus; do
  buildah push $REPOBASE/$reponame docker://$REPOBASE/$reponame:latest
done  

# Install module
add-module $REPOBASE/nethvoice:latest 1

# Tips:
- commentare la build della ui per andare piu' veloce


# DEBUG
ssh nethvoice3@localhost
runagent ~/.config/actions/create-module/05setenvs


runagent ~/.config/actions/create-module/05setenvs <<<"{
  "id": "b21a816b-d0e6-4153-bd7a-20ce6e74e222",
  "action": "create-module",
  "data": {
    "images": [
      "docker.io/library/mariadb:latest"
    ]
  },
  "parent": "a5189d1b-c25c-4438-af32-67411020d34d",
  "extra": {}
}
"


# paylod passato in standar dinput alla action
/usr/local/sbin/redis-cli --raw get module/nethvoice6/task/b21a816b-d0e6-4153-bd7a-20ce6e74e222/context  | jq | cat

# 
api-cli run ...

# rimuovere modulo
remove-module --no-preserve nethvoice3



systemctl --user status mariadb


- mysql
  - 127.0.0.1 host network
  
  
- asterisk
  - utilizzare host network
  - unix domain socket ?
  - volume per /etc/asterisk
  (sips dietro certificato?)
  
- nethvoice
  - container apache + php 5.6
  
  - traefik
  - freepbx
  
- cti
  - traefik
  - proxy tls
  
~~~~~~~~~~~~~~~~~~~~~~~~  

- phonebook
  - proxy tls


utente asterisk ? 
   

- fare container mysql
- container asterisk con volumi per config e agi e che parla con



- ns8, kickstart, 
- aggiunta immainge mysql
- usare le variabili d'ambiente
- generare le password
- girare le porte
- un file service per ogni container imageroot/systemd/user/nethvoice.service
- copiare imageroot/actions/create-module da un altro modulo

problemi
- il repo deve essere pubblico
- il nome del repo deve essere lowercase
- build locali create come nethserver



# TODO

- 
- add mariadb configuration script
    - configure odbc
    - configure user for cdr 
    - configure asterisk cdr user
    - configure user for freepbx OK
    
- Asterisk
    - open ports
    - build Asterisk instead of using ns7 packages
    - upgrade to Asterisk 18
    
- FreePBX
    - add freepbx statis data
    - configure db
    - upgrade to last freepbx
    - install freepbx from sources during container build
    - install pdo_odbc
        
- AGI
    - check fastagi
    - try to run agi on freepbx container

- selinux
    - make stuff work on a selinux environment

- networking
   - avoid network=host in asterisk container
   
- Nethcti
    - make a container with old nethcti
    - add ui

- wizard 
    - restapi
    - ui 



freepbx fa volumes from asterisk
entry point di conf in freepbx e non in asterisk, deve capire se e' la prima inst o no e inizializzare 
freepbx prepara /etc/asterisk come volume e parte prima di asterisk
asterisk: mettere volumes from freepbx (require, after)


alternative:
se e' possibile evitare del tutto la configurazione di odbc nell'entry point del container asterisk e farlo partire con un set di file di configurazione di base

# dump mysql
cd /home/tux/nethvoice
for DB in asterisk asteriskcdrdb; do
    mydumper -h 127.0.0.1 -u root -p $MARIADB_ROOT_PASSWORD -P $MARIADB_PORT -B ${DB} --complete-insert --outputdir imageroot/freepbx/root/initdb.d/data/${DB}
done










###############################
###  Copy data from FreePBX ###
###############################
cd /home/tux/nethvoice
chown -R tux:tux /home/tux/nethvoice/imageroot/volumes/
scp -r root@172.25.5.47:/var/www/html/freepbx/* imageroot/freepbx/root/var/www/html/freepbx/
scp -r root@172.25.5.47:/var/lib/asterisk/agi-bin/* imageroot/volumes/var_lib_asterisk_agi-bin/
scp -r root@172.25.5.47:/var/lib/asterisk/sounds/* imageroot/volumes/var_lib_asterisk_sounds/


patch -p0 < freepbx_fixes.patch
find imageroot/freepbx/root/var/www/html/freepbx/ -name lessphp_* -exec rm {} \;
# TODO remove endpointmanager
#rm -fr imageroot/freepbx/root/var/www/html/freepbx/admin/assets/endpointman
#rm -fr imageroot/freepbx/root/var/www/html/freepbx/admin/modules/_ep_phone_modules
#rm -fr imageroot/freepbx/root/var/www/html/freepbx/admin/modules/endpointman

for db in asterisk asteriskcdrdb nethcti3; do
  mydumper -h 172.25.5.47 -u makako -p Makako,1234 -B $db --complete-insert --outputdir imageroot/volumes/mariadb_docker-entrypoint-initdb.d/
  for file in $(ls imageroot/volumes/mariadb_docker-entrypoint-initdb.d/); do
    if [[ $(echo $file | grep -q "${db}-schema-create"; echo $?) == 0 ]] ; then
      newfile=00_"$file"
    else if [[ $(echo $file | grep -q "s-schema.sql"; echo $?) == 0 ]] ; then
    fi
    awk "/40103 SET TIME_ZONE/ { print;print \"USE \`$db\`;\"; next }1" imageroot/volumes/mariadb_docker-entrypoint-initdb.d/${file} > imageroot/volumes/mariadb_docker-entrypoint-initdb.d/${newfile}
    rm imageroot/volumes/mariadb_docker-entrypoint-initdb.d/${file}
  done
done
rm -fr imageroot/volumes/mariadb_docker-entrypoint-initdb.d/??_asterisk.endpointman*

############################################
############################################
###  Manual containers build and launch  ###
############################################
############################################

# Reset podman
buildah rm --all
podman system prune -f
podman system reset -f
rm -fr ~/.local/share/containers

#
# Set ENV
#
export MARIADB_PORT=13306
export APACHE_SSL_PORT=7189
export APACHE_RUN_USER=asterisk
export APACHE_RUN_GROUP=asterisk
export MARIADB_ROOT_PASSWORD=dummymariadbpass
export AMPDBUSER=freepbxuser
export AMPDBHOST=127.0.0.1
export AMPDBNAME=asterisk
export ASTMANAGERHOST=127.0.0.1
export ASTMANAGERPORT=5038
export AMPMGRUSER=admin
export AMPMGRPASS=dummyampmgrpass
export AMPDBPASS=dummyampdbpass
export CDRDBHOST=mariadb
export CDRDBNAME=asteriskcdrdb
export CDRDBUSER=cdruser
export CDRDBPASS=dummycdrdbpass
export PHP_INI_DIR=/usr/local/etc/php
export REPOBASE=ghcr.io/stell0
export REGISTRY_AUTH_FILE=/etc/nethserver/registry.json
export APACHE_PORT=7187
export AMPASTERISKGROUP=asterisk
export AMPASTERISKUSER=asterisk
export AMPASTERISKWEBGROUP=asterisk
export AMPASTERISKWEBUSER=asterisk
export NETHVOICESECRETKEY=dummysecretkey
export CTIDBPASS=dummyctidbpass
export TANCREDIPORT=7190
export TANCREDI_STATIC_TOKEN=dummytancredistatictoken
export BRAND_NAME=NexthVoice
export BRAND_SITE=http://www.nethvoice.it
export BRAND_DOCS=http://nethvoice.docs.nethesis.it
export JANUS_ADMIN_SECRET=dummyjanusadminsecret
export DEBUG_LEVEL=5
export RTPSTART=10000
export RTPEND=15000
export STUNSERVER=stun1.l.google.com
export STUNPORT=19302
export ICEIGNORE=vmnet,tap,tun,virb,vb-
    
podman login -u Stell0 -p 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 ghcr.io
repobase="${REPOBASE:-ghcr.io/nethserver}"
reponame="nethvoice"



#
# Debug
#

podman exec -it freepbx14 bash
podman exec -it asterisk bash

apt-get update
apt-get install -y mycli vim telnet

export LC_ALL=C.UTF-8
export LANG=C.UTF-8
mycli -u root -h localhost -P $MARIADB_PORT -p $MARIADB_ROOT_PASSWORD

# tancredi debug
export LC_ALL=C.UTF-8
export LANG=C.UTF-8
fpbxPasswordHash=$(echo "SELECT password_sha1 FROM ampusers WHERE username = 'admin'" | mycli -u ${AMPDBUSER} -h 127.0.0.1 -P ${MARIADB_PORT} -p ${AMPDBPASS} -D asterisk | tail -n1 )
SecretKey=$(echo -n "admin${fpbxPasswordHash}${NETHVOICESECRETKEY}" | sha1sum | awk '{print $1}')

# GET tancredi available models
curl -kv "http://127.0.0.1:${TANCREDIPORT}/tancredi/api/v1/models" -H "User: admin" -H "SecretKey: ${SecretKey}"


# telnet 
telnet 127.0.0.1 5038

Action: Login
ActionID: 1
Username: admin
Secret: dummyampmgrpass

Action: Command
Command: core show channels


# TODO module fixing

# TODO container asterisk da rifare compilando su debian? su alpine? (verificare possa andare con musl)


# TODO far girare asterisk come utente asterisk

# TODO /var/lib/asterisk come working directory

# TODO user asterisk come config di buildah (?)

# TODO id degli utenti asterisk del; container asterisk e apace devono essere uguali, quindi creare l'utente con un id numerico in tutti e due i container

# TODO vedere se si puo' specificare la porta nel command line di lancio di apache. altrimentieventualmente fare un file di config fisso che sovrascrive quello di apache

# TODO --volume /dev/log:/dev/log usa il syslog di sistema 

# TODO commentare l'hack di tancredi della porta

# TODO template dentro il container (copiare reload-config da samba)

# TODO rimuovere timeout di mysql nell'initdb.php

# TODO tancredi: montare sqlite asterisk come volume

# TODO configure odbc for cdr

# TODO add certificates to Asterisk

# TODO add certificates to Janus

# TODO janus: add local_ip to /opt/janus/etc/janus/janus.plugin.sip.jcfg ?
