#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import agent
import json
import sys
import os
import random
import string

request = json.load(sys.stdin)

def getFromRequest(request, var_name, env_name, default = ""):
    if var_name in request:
        agent.set_env(env_name, request[var_name])
    else:
        agent.set_env(env_name, default)

# NETHVOICE_HOST_LOCAL_NETWORKS should be a jason containing local networks [{"network":"192.168.5.0","netmask":"255.255.255.0","gateway":"192.168.5.1"}]
getFromRequest(request, 'nethvoice_host_local_networks', 'NETHVOICE_HOST_LOCAL_NETWORKS', '{[]}'))
getFromRequest(request, 'conference_url', 'NETHVOICE_CONFERENCEURL', 'https://meet.jit.si/'))
getFromRequest(request, 'nethvoice_host', 'NETHVOICE_HOST', ''))
getFromRequest(request, 'subscription_systemid', 'SUBSCRIPTION_SYSTEMID', ''))
getFromRequest(request, 'subscription_secret', 'SUBSCRIPTION_SECRET', ''))
getFromRequest(request, 'nethcti_prefix', 'NETHCTI_PREFIX', ''))
getFromRequest(request, 'nethcti_autoc2c', 'NETHCTI_AUTOC2C', 'enabled'))
getFromRequest(request, 'nethcti_trunks_events', 'NETHCTI_TRUNKS_EVENTS', 'enabled'))
getFromRequest(request, 'nethcti_alerts', 'NETHCTI_ALERTS', 'false'))
getFromRequest(request, 'nethcti_authentication_enabled', 'NETHCTI_AUTHENTICATION_ENABLED', 'true'))
getFromRequest(request, 'nethcti_unauthe_call', 'NETHCTI_UNAUTHE_CALL', 'disabled'))
getFromRequest(request, 'nethcti_unauthe_call_ip', 'NETHCTI_UNAUTHE_CALL_IP', ''))
getFromRequest(request, 'nethcti_jabber_url', 'NETHCTI_JABBER_URL', ''))
getFromRequest(request, 'nethcti_jabber_domain', 'NETHCTI_JABBER_DOMAIN', ''))

agent.dump_env()
