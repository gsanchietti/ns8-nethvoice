#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import sys
import json
import agent
import agent.tasks

# Find default traefik instance for current node
default_traefik_id = agent.resolve_agent_id('traefik@node')
if default_traefik_id is None:
    sys.exit(2)

# Configure Traefik to route "/nethvoice" or /$BRAND_NAME
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'] + '-wizard',
        'url':  'http://127.0.0.1:' + os.environ["APACHE_PORT"] + '/' + os.environ["BRAND_NAME"].lower(),
        'http2https':  os.environ["TRAEFIK_HTTP2HTTPS"] == "True",
        'lets_encrypt': os.environ["TRAEFIK_LETS_ENCRYPT"] == "True",
        'path': '/' + os.environ["BRAND_NAME"].lower(),
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)

# Configure Traefik to route "/freepbx" path requests to the webapp service
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'] + '-freepbx',
        'url':  'http://127.0.0.1:' + os.environ["APACHE_PORT"] + '/freepbx',
        'http2https':  os.environ["TRAEFIK_HTTP2HTTPS"] == "True",
        'lets_encrypt': os.environ["TRAEFIK_LETS_ENCRYPT"] == "True",
        'path': '/freepbx',
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)

# Configure Traefik to route "/tancredi" path requests to the webapp service
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'] + '-tancredi',
        'url':  'http://127.0.0.1:' + os.environ["TANCREDIPORT"] + '/tancredi',
        'http2https':  os.environ["TRAEFIK_HTTP2HTTPS"] == "True",
        'lets_encrypt': os.environ["TRAEFIK_LETS_ENCRYPT"] == "True",
        'path': '/tancredi',
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)

# Configure Traefik to route "/provisioning" path requests to get phones configuration
response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'] + '-provisioning',
        'url':  'http://127.0.0.1:' + os.environ["TANCREDIPORT"] + '/provisioning',
        'http2https':  os.environ["TRAEFIK_HTTP2HTTPS"] == "True",
        'lets_encrypt': os.environ["TRAEFIK_LETS_ENCRYPT"] == "True",
        'path': '/tancredi',
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)

